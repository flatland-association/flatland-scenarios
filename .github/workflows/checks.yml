name: Checks

env:
  # DEPENDENCY SWITCH:
  flatland-rl-ref: main
  # DEPENDENCY SWITCH:
  flatland-baselines-ref: main

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [ "main" ]
  schedule:
    - cron: '30 5 * * *'

concurrency:
  group: ${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:

  run-olten-scenarios:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10", "3.11", "3.12", "3.13" ]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install ffmpeg
        run: |
          sudo apt-get update
          sudo apt-get install ffmpeg
      - name: Install Flatland
        run: |
          python -m pip install --upgrade pip
          pip install pytest git+https://github.com/flatland-association/flatland-rl.git@${{ env.flatland-rl-ref }} notebook python-ffmpeg folium
      - name: Checkout flatland-baselines
        run: git clone -b ${{ env.flatland-baselines-ref }} https://github.com/flatland-association/flatland-baselines.git
      - name: Run olten notebook
        run: PYTHONPATH=$PWD/flatland-baselines python -m jupyter nbconvert --ExecutePreprocessor.timeout=600 --execute --to notebook --inplace scenario_olten/scenario_olten.ipynb
      - name: Verify olten scenarios
        run: pytest -s

  run-scenarios:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10", "3.11", "3.12", "3.13" ]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Unzip scenarios
        working-directory: scenarios
        run: |
          unzip -o environments_v2.zip
      - name: Install Flatland
        run: |
          python -m pip install --upgrade pip
          pip install git+https://github.com/flatland-association/flatland-rl.git@${{ env.flatland-rl-ref }} pytest
          flatland-trajectory-generate-from-policy --data-dir "/tmp" --policy-pkg tests.trajectories.test_trajectories --policy-cls RandomPolicy --env-path scenarios/Test_01/Level_0.pkl